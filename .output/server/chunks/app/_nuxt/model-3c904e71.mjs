import { _ as _sfc_main$2 } from './input-92b8d879.mjs';
import { h as useSettings } from '../server.mjs';
import { s as syncStorageRef } from './local-storage-ref-eabb4f1d.mjs';
import { useSSRContext, defineComponent, unref, isRef } from 'vue';
import { ssrRenderAttrs, ssrRenderList, ssrRenderClass, ssrInterpolate, ssrRenderComponent } from 'vue/server-renderer';
import 'ofetch';
import 'hookable';
import 'unctx';
import '@unhead/ssr';
import 'unhead';
import '@unhead/shared';
import 'vue-router';
import 'h3';
import 'ufo';
import 'destr';
import 'ohash';
import '@trpc/client';
import '@trpc/server/shared';
import 'unenv/runtime/npm/consola';
import 'p-limit';
import 'cookie-es';
import 'floating-vue';
import 'defu';
import '../../nitro/node-server.mjs';
import 'node-fetch-native/polyfill';
import 'node:http';
import 'node:https';
import 'unenv/runtime/fetch/index';
import 'scule';
import 'unstorage';
import 'radix3';
import 'node:fs';
import 'node:url';
import 'pathe';

const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "options",
  __ssrInlineRender: true,
  setup(__props) {
    const { maxTokens } = useSettings();
    const maxTokensInput = syncStorageRef(maxTokens);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_GoInput = _sfc_main$2;
      _push(`<div${ssrRenderAttrs(_attrs)}><div mt-5 sm:mt-10 font-bold text-color mb-6 text-14px sm:text-5> Options </div><div flex="~ col" gap-1 text-11px sm:text-4><div text-color font-bold> Max Tokens </div><div text-color-lighter text-10px sm:text-14px> Limits the number of tokens that can be generated by the model.<br> Leave blank to not limit. </div>`);
      _push(ssrRenderComponent(_component_GoInput, {
        modelValue: unref(maxTokensInput),
        "onUpdate:modelValue": ($event) => isRef(maxTokensInput) ? maxTokensInput.value = $event : null,
        "mt-2": "",
        "text-11px": "",
        "sm:text-4": "",
        placeholder: "Maximum tokens",
        "w-full": "",
        "text-gray-5": "",
        "dark:text-gray-1": ""
      }, null, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/settings/model/options.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "model",
  __ssrInlineRender: true,
  setup(__props) {
    const { modelUsed } = useSettings();
    const options = [
      { value: "gpt-3.5-turbo", label: "GPT 3.5", icon: "i-tabler-brand-openai" },
      { value: "gpt-4", label: "GPT 4", icon: "i-tabler-brand-openai" }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_SettingsModelOptions = _sfc_main$1;
      _push(`<div${ssrRenderAttrs(_attrs)}><div font-bold text-color mb-3 sm:mb-6 text-14px sm:text-5> Model </div><div flex gap-3><!--[-->`);
      ssrRenderList(unref(options), (option) => {
        _push(`<div grow flex flex-col items-center p-2 rounded-2 ring-1 cursor-pointer text-gray-5 dark:text-gray-3 gap-2 text-11px sm:text-4 class="${ssrRenderClass([[
          unref(modelUsed) === option.value ? "!ring-primary-400 !dark:ring-primary-400 ring-2 !text-primary-600 dark:!text-primary-400" : ""
        ], "dark:ring-white/10 ring-gray-2"])}"><div class="${ssrRenderClass(option.icon)}" text-5 sm:text-6></div><div>${ssrInterpolate(option.label)}</div></div>`);
      });
      _push(`<!--]--></div>`);
      _push(ssrRenderComponent(_component_SettingsModelOptions, null, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/settings/model.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};

export { _sfc_main as default };
//# sourceMappingURL=model-3c904e71.mjs.map
